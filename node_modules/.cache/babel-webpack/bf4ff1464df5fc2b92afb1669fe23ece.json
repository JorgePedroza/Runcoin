{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/halo_/Documents/RunCoin - RNC/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Component, ViewChild, ViewChildren } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(web3s) {\n    this.web3s = web3s;\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.date = new Date();\n    this.contador = 0;\n    this.contador2 = 0;\n    this.show = true;\n    this.disabled = false;\n    this.animate = false;\n    this.tokensRNC = 0;\n    this.title = 'Ejemplo Ethereum';\n    this.msgEstado = 'Desconectado';\n    this.estado = false;\n    this.count = 0;\n    this.resultado = '';\n    this.points = 0;\n    this.totalRewardPoints = 0;\n    this.blockHash = '';\n    this.blockNumber = '';\n    this.from = '';\n    this.transactionHash = '';\n    this.totalBalance = '';\n    this.amount = '';\n    this.rewardPoints = '';\n    this.exchangedRewardPoints = '';\n    this.balanceOf = '';\n    this.tokensAprovados = '';\n    this.resultTransferencia = '';\n    this.resultTransferenciaAprobada = '';\n    this.resultAprove = '';\n    this.elementos = [];\n    this.elementosClient = [];\n    this.cabeceras = ['Transaction Hash', 'Block Number', 'Amount', 'Sended Reward Points', 'Total Reward Points', 'To'];\n    this.cabecerasClient = ['Transaction Hash', 'Block Number', 'Total Reward Points', 'Exchanged Reward Points', 'From'];\n    this.sendPointsForm = new FormGroup({\n      accountAddress: new FormControl(''),\n      sellAmount: new FormControl('')\n    });\n    this.exchangedPointsForm = new FormGroup({\n      exchangePoints: new FormControl('')\n    }); //---------------------\n\n    this.consultaSaldoForm = new FormGroup({\n      addressConsultaSaldo: new FormControl('')\n    });\n    this.consultaAprobacionExternaForm = new FormGroup({\n      addressPropietario: new FormControl(''),\n      addressAprovada: new FormControl('')\n    });\n    this.transferirForm = new FormGroup({\n      addressDestino: new FormControl(''),\n      cantidadTokens: new FormControl('')\n    });\n    this.transferirFromForm = new FormGroup({\n      addressRemitenteFrom: new FormControl(''),\n      addressDestinoFrom: new FormControl(''),\n      cantidadTokensFrom: new FormControl('')\n    });\n    this.aprovarForm = new FormGroup({\n      addressAprobar: new FormControl(''),\n      cantidadTokens: new FormControl('')\n    });\n  }\n\n  ngAfterViewInit() {\n    this.conectar();\n    this.scrollContainer = this.scrollFrame.nativeElement; //this.elementos.changes.subscribe(() => this.onElementosChanged());   \n  }\n\n  onElementosChanged() {\n    this.scrollToBottom();\n  }\n\n  conectar() {\n    this.web3s.connectAccount().then(r => {\n      this.msgEstado = \"Conectado\";\n      this.estado = true;\n      this.subscribeToEvents();\n    });\n  }\n  /*\r\n    getTotalRewardPoints(): void {\r\n      this.web3s.contrato.methods.getTotalRewardPoints()\r\n      .call()\r\n      .then((response: any) => {\r\n        this.totalRewardPoints = response;\r\n        console.log(`totalRewardPoints => ${response}`);\r\n      });\r\n    }\r\n  \r\n    getRewardPoints(): void {\r\n      this.web3s.contrato.methods.getRewardPoints()\r\n      .call()\r\n      .then((response: any) => {\r\n        this.getRewardPoints = response;\r\n        console.log(`getRewardPoints => ${response}`);\r\n      });\r\n    }\r\n  \r\n    getExchangedRewardPoints(): void {\r\n      this.web3s.contrato.methods.getExchangedRewardPoints()\r\n      .call()\r\n      .then((response: any) => {\r\n        this.getRewardPoints = response;\r\n        console.log(`getExchangedRewardPoints => ${response}`);\r\n      });\r\n    }*/\n  //-----------------------Nueva---------------------//\n  //obtiene el balance de la billetera que ejecuta la simulacion de intercambio de puntos\n\n\n  getBalance() {\n    this.web3s.contrato.methods.balanceOf(this.web3s.accounts[0]).call().then(response => {\n      this.balanceOf = response;\n    });\n  }\n\n  getBalanceByAccount(accountAddress) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.web3s.contrato.methods.balanceOf(accountAddress).call();\n    })();\n  }\n\n  getAllowance(accountPropietario, accountAprovada) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this2.web3s.contrato.methods.allowance(accountPropietario, accountAprovada).call();\n    })();\n  }\n\n  checarBalance() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const addressDapp = (_a = _this3.consultaSaldoForm.get('addressConsultaSaldo')) === null || _a === void 0 ? void 0 : _a.value;\n      console.log(addressDapp);\n      const accountBalance = yield _this3.getBalanceByAccount(addressDapp);\n      console.log(`accountBalance => ${accountBalance}`);\n      _this3.balanceOf = accountBalance;\n    })();\n  }\n\n  checarAprovacion() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      const addressPropietario = (_a = _this4.consultaAprobacionExternaForm.get('addressPropietario')) === null || _a === void 0 ? void 0 : _a.value;\n      const addressAprovada = (_b = _this4.consultaAprobacionExternaForm.get('addressAprovada')) === null || _b === void 0 ? void 0 : _b.value; //return await this.web3s.contrato.methods.balanceOf(accountAddress).call();\n\n      const tokensAprovados = yield _this4.getAllowance(addressPropietario, addressAprovada);\n      console.log(tokensAprovados);\n      _this4.tokensAprovados = tokensAprovados;\n    })();\n  }\n\n  transferirTokens() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const addressDestino = (_a = _this5.transferirForm.get('addressDestino')) === null || _a === void 0 ? void 0 : _a.value;\n      const tokensEnviados = 100;\n\n      _this5.web3s.contrato.methods.transfer(addressDestino, tokensEnviados).send({\n        from: _this5.web3s.accounts[0]\n      }).then(response => {\n        _this5.tokensRNC = 0;\n        _this5.contador = 0;\n        _this5.hours = 0;\n        _this5.minutes = 0;\n        _this5.seconds = 0;\n        _this5.resultTransferencia = \"Transacción realizada!\";\n        _this5.blockHash = response.blockHash;\n        _this5.blockNumber = response.blockNumber;\n        _this5.from = response.from;\n        _this5.transactionHash = response.transactionHash;\n\n        _this5.getBalance();\n      }).catch(error => {\n        console.log(error);\n        _this5.resultTransferencia = \"Error en la transacción!\";\n      });\n    })();\n  }\n\n  aprovarUsoDeTokens() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      const addressAprobada = (_a = _this6.aprovarForm.get('addressAprobar')) === null || _a === void 0 ? void 0 : _a.value;\n      const cantidadTokens = (_b = _this6.aprovarForm.get('cantidadTokens')) === null || _b === void 0 ? void 0 : _b.value;\n      console.log(addressAprobada);\n      console.log(cantidadTokens);\n\n      _this6.web3s.contrato.methods.approve(addressAprobada, cantidadTokens).send({\n        from: _this6.web3s.accounts[0]\n      }).then(response => {\n        _this6.resultAprove = \"Transacción realizada!\";\n        _this6.blockHash = response.blockHash;\n        _this6.blockNumber = response.blockNumber;\n        _this6.from = response.from;\n        _this6.transactionHash = response.transactionHash;\n\n        _this6.getBalance();\n      }).catch(error => {\n        console.log(error);\n        _this6.resultAprove = \"Error en la transacción!\";\n      });\n    })();\n  }\n\n  transferirTokensAprobados() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      const addressRemitenteFrom = \"0xdAD505088d0319d44698FB81857478d9Ea47D24C\";\n      const addressDestinoFrom = (_a = _this7.transferirFromForm.get('addressDestinoFrom')) === null || _a === void 0 ? void 0 : _a.value;\n      const tokensEnviadosFrom = (_b = _this7.transferirFromForm.get('cantidadTokensFrom')) === null || _b === void 0 ? void 0 : _b.value;\n\n      _this7.web3s.contrato.methods.transferFrom(addressRemitenteFrom, addressDestinoFrom, tokensEnviadosFrom).send({\n        from: _this7.web3s.accounts[0]\n      }).then(response => {\n        _this7.resultTransferenciaAprobada = \"Transacción realizada!\";\n        _this7.blockHash = response.blockHash;\n        _this7.blockNumber = response.blockNumber;\n        _this7.from = response.from;\n        _this7.transactionHash = response.transactionHash;\n\n        _this7.getBalance();\n      }).catch(error => {\n        console.log(error);\n        _this7.resultTransferenciaAprobada = \"Error en la transacción!\";\n      });\n    })();\n  } //----------------------Termina--------------//\n\n\n  borrar() {\n    this.resultado = \"\";\n    this.blockHash = \"\";\n    this.blockNumber = \"\";\n    this.from = \"\";\n    this.transactionHash = \"\";\n  }\n\n  subscribeToEvents() {\n    var _this8 = this;\n\n    // Subscribe to pending transactions\n    const self = this;\n    this.web3s.contrato.events.Transfer({\n      fromBlock: 0\n    }, (error, event) => {\n      if (!error) {\n        // setInterval(() => {\n        const abiDecoder = require('abi-decoder'); // NodeJS\n\n\n        abiDecoder.addABI(this.web3s.abi);\n        this.web3s.web3js.eth.getTransaction(event.transactionHash).then( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (data) {\n            const decodedData = abiDecoder.decodeMethod(data.input);\n\n            if (decodedData != undefined) {\n              //recuperando datos registrados al enviar puntos\n              //datos recuperados: amount, rewardPoints\n              if (decodedData.name == 'sendPoints') {\n                _this8.amount = decodedData.params[1].value;\n                _this8.rewardPoints = decodedData.params[2].value;\n                _this8.exchangedRewardPoints = '0';\n                _this8.totalRewardPoints = decodedData.params[3].value;\n\n                _this8.elementos.push({\n                  blockHash: event.blockHash,\n                  transactionHash: event.transactionHash,\n                  blockNumber: event.blockNumber,\n                  amount: _this8.amount,\n                  rewardPoints: _this8.rewardPoints,\n                  totalRewardPoints: _this8.totalRewardPoints,\n                  accountAddress: event.returnValues.to\n                });\n\n                _this8.elementos = _this8.elementos.sort((a, b) => parseInt(a.blockNumber) - parseInt(b.blockNumber)); //recuperando data de los puntos intercambiados\n                //datos recuperados: exchangedRewardPoints\n              } else if (decodedData.name == 'exchangePoints') {\n                _this8.exchangedRewardPoints = decodedData.params[1].value;\n                _this8.totalRewardPoints = decodedData.params[2].value;\n\n                _this8.elementosClient.push({\n                  blockHash: event.blockHash,\n                  transactionHash: event.transactionHash,\n                  blockNumber: event.blockNumber,\n                  exchangedRewardPoints: _this8.exchangedRewardPoints,\n                  totalRewardPoints: _this8.totalRewardPoints,\n                  accountAddress: event.returnValues.from\n                });\n\n                _this8.elementosClient = _this8.elementosClient.sort((a, b) => parseInt(a.blockNumber) - parseInt(b.blockNumber));\n              } else {}\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()); // }, 500);                                                                                                \n      }\n    });\n  }\n\n  scrollToBottom() {\n    this.scrollContainer.scroll({\n      top: this.scrollContainer.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n\n  updateTimer() {\n    this.date.setHours(this.hours);\n    this.date.setMinutes(this.minutes);\n    this.date.setSeconds(this.seconds);\n    this.date.setMilliseconds(0);\n    const time = this.date.getTime();\n    this.date.setTime(time + 1000); //---\n\n    this.hours = this.date.getHours();\n    this.minutes = this.date.getMinutes();\n    this.seconds = this.date.getSeconds();\n    this.contador2 = this.date.getSeconds() * 10;\n    this.tokensRNC += this.contador2;\n  }\n\n  start() {\n    if (this.contador == 0) {\n      this.contador++;\n      this.timer = setInterval(() => {\n        this.updateTimer();\n      }, 1000);\n    }\n  }\n\n  stop() {\n    this.animate = false;\n    clearInterval(this.timer);\n    this.contador = 0;\n  }\n\n  reset() {\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.stop();\n    this.contador = 0;\n  }\n\n};\n\n__decorate([ViewChild('scrollframe', {\n  static: false\n})], AppComponent.prototype, \"scrollFrame\", void 0);\n\n__decorate([ViewChildren('item')], AppComponent.prototype, \"itemElements\", void 0);\n\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  styles: []\n})], AppComponent);\nexport { AppComponent }; //================================================================================================================","map":{"version":3,"sources":["C:\\Users\\halo_\\Documents\\RunCoin - RNC\\src\\app\\app.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormControl, FormGroup } from '@angular/forms';\nimport { Component, AfterViewInit, ElementRef, ViewChild, ViewChildren, QueryList } from '@angular/core';\nimport { Web3Service } from './services/web3.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChild('scrollframe', { static: false }) private scrollFrame!: ElementRef;\n  @ViewChildren('item') itemElements!: QueryList<any>;\n\n  public hours: number = 0;\n  public minutes: number = 0;\n  public seconds: number = 0;\n  private timer: any;\n  private date = new Date();\n  public contador: number =0;\n  public contador2: number =0;\n  \n  public show: boolean = true;\n  public disabled: boolean = false;\n  public animate: boolean = false;\n  private scrollContainer: any;\n\n  public tokensRNC: number=0;\n\n  title = 'Ejemplo Ethereum';\n  msgEstado = 'Desconectado';\n  estado = false;\n  count = 0;\n  resultado = '';\n  points = 0;\n  totalRewardPoints = 0;\n\n  blockHash = '';\n  blockNumber = '';\n  from = '';\n  transactionHash = '';\n  totalBalance = '';\n  amount = '';\n  rewardPoints = '';\n  exchangedRewardPoints = '';\n\n  balanceOf = '';\n  tokensAprovados = '';\n  resultTransferencia = '';\n  resultTransferenciaAprobada = '';\n  resultAprove = '';\n\n\n  elementos: any = [];\n  elementosClient: any = [];\n\n  cabeceras = ['Transaction Hash', 'Block Number', 'Amount', 'Sended Reward Points', 'Total Reward Points', 'To'];\n  cabecerasClient = ['Transaction Hash', 'Block Number', 'Total Reward Points', 'Exchanged Reward Points', 'From'];\n\n  constructor(public web3s: Web3Service) { }\n\n  sendPointsForm = new FormGroup({\n    accountAddress: new FormControl(''),\n    sellAmount: new FormControl('')\n  });\n\n  exchangedPointsForm = new FormGroup({\n    exchangePoints: new FormControl('')\n  });\n\n  //---------------------\n  consultaSaldoForm = new FormGroup({\n    addressConsultaSaldo: new FormControl('')\n  });\n\n  consultaAprobacionExternaForm = new FormGroup({\n    addressPropietario: new FormControl(''),\n    addressAprovada: new FormControl('')\n  });\n\n  transferirForm = new FormGroup({\n    addressDestino: new FormControl(''),\n    cantidadTokens: new FormControl('')\n  });\n\n  transferirFromForm = new FormGroup({\n    addressRemitenteFrom: new FormControl(''),\n    addressDestinoFrom: new FormControl(''),\n    cantidadTokensFrom: new FormControl('')\n  });\n\n  aprovarForm = new FormGroup({\n    addressAprobar: new FormControl(''),\n    cantidadTokens: new FormControl('')\n  });\n\n  ngAfterViewInit(): void {\n    this.conectar();\n    this.scrollContainer = this.scrollFrame.nativeElement;\n    //this.elementos.changes.subscribe(() => this.onElementosChanged());   \n  }\n\n  private onElementosChanged(): void {\n    this.scrollToBottom();\n  }\n\n  conectar(): void {\n    this.web3s.connectAccount().then(\n      (r) => {\n        this.msgEstado = \"Conectado\";\n        this.estado = true;\n        this.subscribeToEvents();\n      }\n\n\n    );\n  }\n  /*\n    getTotalRewardPoints(): void {\n      this.web3s.contrato.methods.getTotalRewardPoints()\n      .call()\n      .then((response: any) => {\n        this.totalRewardPoints = response;\n        console.log(`totalRewardPoints => ${response}`);\n      });\n    }\n  \n    getRewardPoints(): void {\n      this.web3s.contrato.methods.getRewardPoints()\n      .call()\n      .then((response: any) => {\n        this.getRewardPoints = response;\n        console.log(`getRewardPoints => ${response}`);\n      });\n    }\n  \n    getExchangedRewardPoints(): void {\n      this.web3s.contrato.methods.getExchangedRewardPoints()\n      .call()\n      .then((response: any) => {\n        this.getRewardPoints = response;\n        console.log(`getExchangedRewardPoints => ${response}`);\n      });\n    }*/\n\n\n\n\n\n  //-----------------------Nueva---------------------//\n  //obtiene el balance de la billetera que ejecuta la simulacion de intercambio de puntos\n  getBalance(): void {\n    this.web3s.contrato.methods.balanceOf(this.web3s.accounts[0])\n      .call()\n      .then((response: any) => {\n        this.balanceOf = response;\n      });\n  }\n  async getBalanceByAccount(accountAddress: any): Promise<any> {\n    return await this.web3s.contrato.methods.balanceOf(accountAddress).call();\n  }\n  async getAllowance(accountPropietario: any, accountAprovada: any): Promise<any> {\n    return await this.web3s.contrato.methods.allowance(accountPropietario, accountAprovada).call();\n  }\n\n  async checarBalance(): Promise<void> {\n    const addressDapp = this.consultaSaldoForm.get('addressConsultaSaldo')?.value;\n    console.log(addressDapp);\n    const accountBalance = await this.getBalanceByAccount(addressDapp);\n    console.log(`accountBalance => ${accountBalance}`);\n    this.balanceOf = accountBalance;\n  }\n\n  async checarAprovacion(): Promise<void> {\n    const addressPropietario = this.consultaAprobacionExternaForm.get('addressPropietario')?.value;\n    const addressAprovada = this.consultaAprobacionExternaForm.get('addressAprovada')?.value;\n    //return await this.web3s.contrato.methods.balanceOf(accountAddress).call();\n    const tokensAprovados = await this.getAllowance(addressPropietario, addressAprovada);\n    console.log(tokensAprovados);\n    this.tokensAprovados = tokensAprovados;\n  }\n\n  async transferirTokens(): Promise<void> {\n    const addressDestino = this.transferirForm.get('addressDestino')?.value;\n    const tokensEnviados = 100;\n\n    this.web3s.contrato.methods.transfer(addressDestino, tokensEnviados).send({ from: this.web3s.accounts[0] })\n      .then((response: any) => {\n        this.tokensRNC = 0;\n        this.contador =0;\n        this.hours =0;\n      this.minutes = 0;\n      this.seconds = 0;\n        this.resultTransferencia = \"Transacción realizada!\";\n        this.blockHash = response.blockHash;\n        this.blockNumber = response.blockNumber;\n        this.from = response.from;\n        this.transactionHash = response.transactionHash;\n        this.getBalance();\n      })\n      .catch((error: any) => {\n        console.log(error);\n        this.resultTransferencia = \"Error en la transacción!\";\n      });\n  }\n\n  async aprovarUsoDeTokens(): Promise<void> {\n    const addressAprobada = this.aprovarForm.get('addressAprobar')?.value;\n    const cantidadTokens = this.aprovarForm.get('cantidadTokens')?.value;\n\n    console.log(addressAprobada);\n    console.log(cantidadTokens);\n\n    this.web3s.contrato.methods.approve(addressAprobada, cantidadTokens).send({ from: this.web3s.accounts[0] })\n      .then((response: any) => {\n        this.resultAprove = \"Transacción realizada!\";\n        this.blockHash = response.blockHash;\n        this.blockNumber = response.blockNumber;\n        this.from = response.from;\n        this.transactionHash = response.transactionHash;\n        this.getBalance();\n      })\n      .catch((error: any) => {\n        console.log(error);\n        this.resultAprove = \"Error en la transacción!\";\n      });\n  }\n\n  async transferirTokensAprobados(): Promise<void> {\n    const addressRemitenteFrom = \"0xdAD505088d0319d44698FB81857478d9Ea47D24C\";\n    const addressDestinoFrom = this.transferirFromForm.get('addressDestinoFrom')?.value;\n    const tokensEnviadosFrom = this.transferirFromForm.get('cantidadTokensFrom')?.value;\n\n    this.web3s.contrato.methods.transferFrom(addressRemitenteFrom, addressDestinoFrom, tokensEnviadosFrom).send({ from: this.web3s.accounts[0] })\n      .then((response: any) => {\n        this.resultTransferenciaAprobada = \"Transacción realizada!\";\n        this.blockHash = response.blockHash;\n        this.blockNumber = response.blockNumber;\n        this.from = response.from;\n        this.transactionHash = response.transactionHash;\n        this.getBalance();\n      })\n      .catch((error: any) => {\n        console.log(error);\n        this.resultTransferenciaAprobada = \"Error en la transacción!\";\n      });\n  }\n\n\n  //----------------------Termina--------------//\n\n  borrar(): void {\n    this.resultado = \"\";\n    this.blockHash = \"\";\n    this.blockNumber = \"\";\n    this.from = \"\";\n    this.transactionHash = \"\";\n  }\n\n  subscribeToEvents() {\n    // Subscribe to pending transactions\n    const self = this;\n    this.web3s.contrato.events.Transfer({\n      fromBlock: 0\n    },\n      (error: any, event: any) => {\n        if (!error) {\n          // setInterval(() => {\n\n          const abiDecoder = require('abi-decoder'); // NodeJS\n          abiDecoder.addABI(this.web3s.abi);\n\n          this.web3s.web3js.eth.getTransaction(event.transactionHash).then(async (data: any) => {\n\n            const decodedData = abiDecoder.decodeMethod(data.input);\n\n            if (decodedData != undefined) {\n\n              //recuperando datos registrados al enviar puntos\n              //datos recuperados: amount, rewardPoints\n              if (decodedData.name == 'sendPoints') {\n                this.amount = decodedData.params[1].value\n                this.rewardPoints = decodedData.params[2].value;\n                this.exchangedRewardPoints = '0';\n                this.totalRewardPoints = decodedData.params[3].value;\n\n                this.elementos.push(\n                  {\n                    blockHash: event.blockHash,\n                    transactionHash: event.transactionHash,\n                    blockNumber: event.blockNumber,\n                    amount: this.amount,\n                    rewardPoints: this.rewardPoints,\n                    totalRewardPoints: this.totalRewardPoints,\n                    accountAddress: event.returnValues.to\n                  }\n                );\n\n                this.elementos = this.elementos.sort((a: any, b: any) => parseInt(a.blockNumber) - parseInt(b.blockNumber));\n\n                //recuperando data de los puntos intercambiados\n                //datos recuperados: exchangedRewardPoints\n              } else if (decodedData.name == 'exchangePoints') {\n                this.exchangedRewardPoints = decodedData.params[1].value;\n                this.totalRewardPoints = decodedData.params[2].value;\n\n                this.elementosClient.push(\n                  {\n                    blockHash: event.blockHash,\n                    transactionHash: event.transactionHash,\n                    blockNumber: event.blockNumber,\n                    exchangedRewardPoints: this.exchangedRewardPoints,\n                    totalRewardPoints: this.totalRewardPoints,\n                    accountAddress: event.returnValues.from\n                  }\n                );\n\n                this.elementosClient = this.elementosClient.sort((a: any, b: any) => parseInt(a.blockNumber) - parseInt(b.blockNumber));\n\n              } else {\n\n              }\n\n            }\n\n          });\n\n          // }, 500);                                                                                                \n        }\n      });\n  }\n\n  scrollToBottom() {\n    this.scrollContainer.scroll({\n      top: this.scrollContainer.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n \n    updateTimer() { \n     \n\n      this.date.setHours(this.hours);\n      this.date.setMinutes(this.minutes);\n      this.date.setSeconds(this.seconds);\n      this.date.setMilliseconds(0);\n      const time = this.date.getTime();\n      this.date.setTime(time + 1000);  //---\n      \n      this.hours = this.date.getHours();\n      this.minutes = this.date.getMinutes();\n      this.seconds = this.date.getSeconds();\n\n      this.contador2 = this.date.getSeconds() *10;\n      this.tokensRNC+= this.contador2;\n       \n     \n      \n    }\n    \n    start() {\n\n        if(this.contador == 0){\n          this.contador++;\n         \n          this.timer = setInterval(() => {\n            this.updateTimer();\n          }, 1000);\n        }     \n      \n    }\n  \n    stop() {    \n      this.animate = false;\n      clearInterval(this.timer);\n      this.contador=0;\n    }\n  \n    reset() {\n      this.hours = 0;\n      this.minutes = 0;\n      this.seconds = 0;\n      this.stop();\n      this.contador=0;\n    }\n  \n  \n \n \n  }\n\n  //================================================================================================================\n "],"sourceRoot":""},"metadata":{},"sourceType":"module"}